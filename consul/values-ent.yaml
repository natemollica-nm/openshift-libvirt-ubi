global:
  name: consul
  peering:
    enabled: true

  adminPartitions:
    enabled: true
    name: "default"

  acls:
    manageSystemACLs: true

  tls:
    enabled: true
    enableAutoEncrypt: true
    verify: true
    httpsOnly: true

  gossipEncryption:
    autoGenerate: false

  ui:
    enabled: true

  enterpriseLicense:
    secretName: license
    secretKey: key
    enableLicenseAutoload: true

  enableConsulNamespaces: true

  imagePullSecrets:
    - name: pull-secret

  openshift:
    enabled: true

  metrics:
    enabled: true
    enableAgentMetrics: true
    disableAgentHostName: true
    enableHostMetrics: true
    prefixFilter:
      allowList: ["consul.rpc.server.call"]

#  recursors: [
#    "8.8.8.8",
#    "8.8.4.4"
#  ]

## We configure the DNS Forwarder stub domain, so redirection is not necessary
dns:
  enabled: true
  enableRedirection: false
  type: ClusterIP

connectInject:
  enabled: true
  default: false
  transparentProxy:
    defaultEnabled: false
    defaultOverwriteProbes: false
  consulNamespaces:
    mirroringK8S: true
  # request must be <= limit:
  # -init-container-cpu-request value
  initContainer:
    resources:
      limits:
        cpu: 4000m
        memory: 4Gi
      requests:
        cpu: 1000m
        memory: 2Gi
  sidecarProxy:
    concurrency: 4
    resources:
      limits:
        cpu: 4
        memory: 4Gi
      requests:
        cpu: 2
        memory: 500Mi
    lifecycle:
      defaultEnableShutdownDrainListeners: true
      defaultEnabled: true
      defaultGracefulPort: 20600
      defaultGracefulShutdownPath: /graceful_shutdown
      defaultShutdownGracePeriodSeconds: 2
  metrics:
    defaultEnabled: true
    defaultEnableMerging: true
    enableGatewayMetrics: true
    defaultMergedMetricsPort: '20100'
    defaultPrometheusScrapePort: '20200'    # consul.hashicorp.com/service-metrics-port: 20200 | Port for Application Metrics Exposure
    defaultPrometheusScrapePath: '/metrics' # consul.hashicorp.com/service-metrics-path: /metrics | Path for Application Metrics Exposure
  apiGateway:
    manageExternalCRDs: true
    managedGatewayClass:
      serviceType: LoadBalancer
      resources:
        limits:
          cpu: 4
          memory: 4Gi
        requests:
          cpu: 2
          memory: 500Mi
      deployment:
        defaultInstances: 1
        minInstances: 0
        maxInstances: 3
  cni:
    enabled: true
    logLevel: trace
    namespace: consul
    multus: true
    cniBinDir: /var/lib/cni/bin
    cniNetDir: /etc/kubernetes/cni/net.d

meshGateway:
  enabled: true
  logLevel: trace
  replicas: 1
  affinity: null
  service:
    type: "NodePort"
    nodePort: "30100"

server:
  enabled: true
  logLevel: "TRACE"
  enableAgentDebug: true
  replicas: 1
  storage: 50Gi
  storageClass: local-sc
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Delete
  affinity: |
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app: {{ template "consul.name" . }}
            release: "{{ .Release.Name }}"
            component: server
        topologyKey: kubernetes.io/hostname
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                  - "storage-1.ocp-libvirt.local"
                  - "storage-2.ocp-libvirt.local"
                  - "storage-3.ocp-libvirt.local"
  extraConfig: |
    {
      "performance": {
        "raft_multiplier": 1
      }
    }    

ui:
  enabled: true
  metrics:
    enabled: false
  ingress:
    enabled: true
    annotations: "route.openshift.io/termination: passthrough"
    pathType: ImplementationSpecific
    hosts:
      - paths:
          - ""

terminatingGateways:
  enabled: false
  logLevel: trace
  defaults:
    replicas: 1
    resources:
      limits:
        cpu: null
        memory: 2Gi
      requests:
        cpu: 4000m
        memory: 2Gi
    affinity: null
  consulNamespace: "default"
  gateways:
    - name: terminating-gateway
      consulNamespace: default
      extraVolumes:
        - type: secret
          name: root-tgw-certs

ingressGateways:
  enabled: false
  logLevel: trace
  defaults:
    replicas: 1
  consulNamespace: "default"
  gateways:
    - name: ingress-gateway
      service:
        type: LoadBalancer
        ports:
          - port: 8080
          - port: 8443